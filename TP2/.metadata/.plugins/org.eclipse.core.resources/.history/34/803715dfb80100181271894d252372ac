package jouerTests;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.mockito.Mockito.*;

import jouer.Banque;
import jouer.De;
import jouer.DebitImpossibleException;
import jouer.Jeu;
import jouer.JeuFermeException;
import jouer.Joueur;

class jeuTests {

	Jeu j;
	Joueur p;
	De de1, de2;
	Banque b;
	
	@BeforeEach
	void setUp() throws Exception {
		b = mock(Banque.class, "b");
		p = mock(Joueur.class, "p");
		de1 = mock(De.class, "de1");
		de2 = mock(De.class, "de2");
		j = new Jeu(b);
	}

	@Test(expected = JeuFermeException.class)
	void testJeuFerme() throws JeuFermeException {
		j.fermer();
		Excep.jouer(p, de1, de2);
	}
	
	@Test
	void testJoueurInsolvable() throws DebitImpossibleException {
		Joueur p = mock(Joueur.class, "j");
		doThrow(new DebitImpossibleException()).when(p).debiter(20);
	}

}
